// :
//  Write a program to create a class 
// Customer(custno,custname,contactnumber,custaddr). Write a method to search the 
// customer name with given contact number and display the details. 

import java.util.Scanner; 
class Customer 
{int cno; 
  String cname,cmob,cadd; 
  
 public static void main(String [] args) 
 { 
  int i=0; 
  { 
    
    
  Scanner sc = new Scanner(System.in); 
  Customer ob[]=new Customer[5]; 
   
  for(i=0;i<5;i++) 
  { 
   System.out.println("Enter cno,cname,cmob,cadd"); 
   ob[i]=new Customer(); 
   ob[i].cno=sc.nextInt(); 
   ob[i].cname=sc.next(); 
   ob[i].cmob=sc.next(); 
   ob[i].cadd=sc.next(); 
  } 
  String mb; 
  System.out.print("enter mob to search"); 
   for(i=0;i<5;i++) 
    { 
     if(mb.equals(ob[i]).cmob) 
     { 
      System.out.println("Name"+ob[i].cname); 
     } 
   
    } 
  } 
 } 
 } 
  

//  Write a program to create a super class Vehicle having members Company and 
// price. 
// Derive two different classes LightMotorVehicle(mileage) and HeavyMotorVehicle 
// (capacity_in_tons). Accept the information for "n" vehicles and display the 
// information in appropriate form. While taking data, ask user about the type of vehicle 
// first. 

import java.io.*; 
class Vehicle {  
    String company; 
    double price;

    public void accept() throws IOException { 
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
        System.out.println("Enter the Company and price of the Vehicle: "); 
        company = br.readLine(); 
        price = Double.parseDouble(br.readLine()); 
    } 

    public void display() { 
        System.out.println("Company: " + company + " | Price: " + price); 
    } 
} 

class LightMotorVehicle extends Vehicle { 
    double mileage; 

    public void accept() throws IOException { 
        super.accept(); 
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
        System.out.println("Enter the mileage of the vehicle: "); 
        mileage = Double.parseDouble(br.readLine()); 
    } 

    public void display() { 
        super.display(); 
        System.out.println("Mileage: " + mileage); 
    } 
} 

class HeavyMotorVehicle extends Vehicle { 
    double capacityInTons; 

    public void accept() throws IOException { 
        super.accept(); 
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
        System.out.println("Enter the capacity of the vehicle in tons: "); 
        capacityInTons = Double.parseDouble(br.readLine()); 
    } 

    public void display() { 
        super.display(); 
        System.out.println("Capacity in tons: " + capacityInTons); 
    } 
} 

class VehicleManagement { 
    public static void main(String[] args) throws IOException { 
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
        System.out.println("Select the type of vehicle: "); 
        System.out.println("1. Light Vehicle"); 
        System.out.println("2. Heavy Vehicle"); 
        int choice = Integer.parseInt(br.readLine()); 

        switch (choice) { 
            case 1:  
                System.out.println("Enter the number of Light vehicles: "); 
                int n = Integer.parseInt(br.readLine()); 
                LightMotorVehicle[] lightVehicles = new LightMotorVehicle[n]; 
                for (int i = 0; i < n; i++) { 
                    lightVehicles[i] = new LightMotorVehicle(); 
                    lightVehicles[i].accept(); 
                } 
                System.out.println("\nDisplaying Light Vehicles Information: ");
                for (LightMotorVehicle vehicle : lightVehicles) { 
                    vehicle.display(); 
                } 
                break; 

            case 2: 
                System.out.println("Enter the number of Heavy vehicles: "); 
                int m = Integer.parseInt(br.readLine()); 
                HeavyMotorVehicle[] heavyVehicles = new HeavyMotorVehicle[m]; 
                for (int i = 0; i < m; i++) { 
                    heavyVehicles[i] = new HeavyMotorVehicle(); 
                    heavyVehicles[i].accept();  
                } 
                System.out.println("\nDisplaying Heavy Vehicles Information: ");
                for (HeavyMotorVehicle vehicle : heavyVehicles) { 
                    vehicle.display(); 
                } 
                break; 

            default: 
                System.out.println("Invalid choice!"); 
        }  
    }  
}
